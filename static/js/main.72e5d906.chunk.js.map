{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","App.js","index.js","components/Chart/Chart.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","a","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","App","state","fetcheddata","this","setState","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72e5d906.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__PV0oB\",\"card\":\"Cards_card__30-Jy\",\"infected\":\"Cards_infected__1-ReR\",\"recovered\":\"Cards_recovered__P9EsH\",\"deaths\":\"Cards_deaths__13Wwf\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n\r\n    if(!confirmed){\r\n        return 'Loading...';\r\n    }\r\n    return (\r\n      <div className={styles.container}>\r\n          <Grid container spacing={3} justify=\"center\"> \r\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom> Infected </Typography>\r\n                    <Typography variant=\"h5\"> \r\n                        <CountUp\r\n                          start={0}\r\n                          end={confirmed.value}\r\n                          duration={2.5}\r\n                          separator=\",\"\r\n                        />\r\n                     </Typography>\r\n                     <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\"> Number of active cases of COVID-19</Typography>\r\n                </CardContent>\r\n\r\n            </Grid>\r\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom> Recovered </Typography>\r\n                    <Typography variant=\"h5\"> \r\n                        <CountUp\r\n                          start={0}\r\n                          end={recovered.value}\r\n                          duration={2.5}\r\n                          separator=\",\"\r\n                        />\r\n                     </Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\"> Number of recoveries cases of COVID-19</Typography>\r\n                </CardContent>\r\n\r\n            </Grid>\r\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom> Deaths</Typography>\r\n                    <Typography variant=\"h5\"> \r\n                        <CountUp\r\n                          start={0}\r\n                          end={deaths.value}\r\n                          duration={2.5}\r\n                          separator=\",\"\r\n                        />\r\n                     </Typography>\r\n                    <Typography color=\"textSecondary\"> Real Date </Typography>\r\n                    <Typography variant=\"body2\"> Number of deaths caused of COVID-19</Typography>\r\n                </CardContent>\r\n\r\n            </Grid>\r\n          </Grid>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async () => {\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(url);\r\n\r\n        return  { confirmed, recovered, deaths,lastUpdate };\r\n \r\n    } catch (error) {\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n        \r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed:  dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }))\r\n\r\n        return modifiedData;\r\n\r\n    } catch (error) {\r\n\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = () => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        \r\n        fetchAPI();\r\n    });\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n           ? (\r\n         <Line \r\n           data={{\r\n                labels: dailyData.map(({ date }) => date),\r\n                datasets: [{\r\n                    data: dailyData.map(({ confirmed }) => confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#33333ff',\r\n                    fill: true,\r\n                }, {\r\n                    data: dailyData.map(({ deaths }) => deaths),\r\n                    label: 'Deaths',\r\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                    fill: true,\r\n                }],\r\n            }}\r\n        />) : null\r\n    );\r\n\r\n    return (\r\n       <div className={styles.container}>\r\n           {lineChart}\r\n       </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Chart;","import React from 'react';\n\n// import Cards from './components/Cards/Cards';\n// import Chart from './components/Chart/Chart';\n// import CountryPicker from './components/CountryPicker/CountryPicker'; or  import all components in one line like done beolw...  add into components folder an index.js file and default export all the components. \n\n\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\n\nclass App extends React.Component {\n  state = {\n    data: {},\n  }\n\n  async componentDidMount () {\n    const fetcheddata = await fetchData();\n\n    this.setState({ data: fetcheddata});\n  }\n\n  render() {\n\n    const { data } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <Cards data={data} />\n        <Chart />\n     \n      </div>\n    )\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2GzTE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__20G74\"};"],"sourceRoot":""}